{"version":3,"sources":["App.js","index.js"],"names":["App","useState","selectedVariable","setVariable","jsonData","setJsonData","console","log","useEffect","fetch","then","res","json","result","error","setError","Wind","Solar","DefaultForm","size","onChange","evt","target","value","selected","wind","contractors","map","contractor","i","costs","location","solar","roof","ReactDOM","render","document","getElementById"],"mappings":"0KAGe,SAASA,IAAO,IAAD,EACSC,mBAAS,OADlB,mBACvBC,EADuB,KACNC,EADM,OAECF,mBAAS,IAFV,mBAEvBG,EAFuB,KAEdC,EAFc,KAyB1B,OAtBFC,QAAQC,IAAIH,GACZE,QAAQC,IAAIL,GAEVM,qBAAU,WAIVC,MAFU,uEAGPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAECR,EAAYQ,SAKd,SAACC,GACCC,SAASD,KAEZ,IAEmB,QAAlBZ,EAEE,8BACA,cAACc,EAAD,CAAMb,YAAaA,EAAaC,SAAUA,MAK1B,SAAlBF,EAEE,8BACA,cAACe,EAAD,CAAOd,YAAaA,EAAaC,SAAUA,MAO3C,8BACG,cAACc,EAAD,CAAaf,YAAaA,MAMhC,SAASe,EAAT,GAAqC,IAAff,EAAc,EAAdA,YAO3B,OACE,8BACC,yBAAQgB,KAAK,IAAIC,SAPtB,SAA2BC,GAEzBlB,EAAYkB,EAAIC,OAAOC,QAKpB,UACA,wBAAQC,UAAQ,EAACD,MAAM,QAAvB,mBACA,wBAAQA,MAAM,OAAd,uBAME,SAASP,EAAT,GAAuC,IAAxBb,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,SAOhC,OACE,gCACC,yBAAQe,KAAK,IAAIC,SAPtB,SAA2BC,GAExBlB,EAAYkB,EAAIC,OAAOC,QAKrB,UACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQC,UAAQ,EAACD,MAAM,OAAvB,qBAGA,sCAEA,wBAAQJ,KAAK,IAAb,SAEGf,EAASqB,KAAKC,YAAYC,KAAM,SAACC,EAAWC,GAAZ,OAC9B,wBAAQN,MAAOM,EAAf,SAAmBD,SAKvB,wBAAQT,KAAK,IAAb,SAEEf,EAASqB,KAAKK,MAAMH,KAAM,SAACC,EAAWC,GAAZ,OACxB,wBAAQN,MAAOM,EAAf,SAAmBD,SAKvB,wBAAQT,KAAK,IAAb,SAEEf,EAASqB,KAAKM,SAASJ,KAAM,SAACC,EAAWC,GAAZ,OAC3B,wBAAQN,MAAOM,EAAf,SAAmBD,YAUtB,SAASX,EAAT,GAAwC,IAAxBd,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,SAOjC,OACE,gCACC,yBAAQe,KAAK,IAAIC,SAPtB,SAA2BC,GAExBlB,EAAYkB,EAAIC,OAAOC,QAKrB,UACA,wBAAQC,UAAQ,EAACD,MAAM,QAAvB,mBACA,wBAAQA,MAAM,OAAd,qBAGA,uCAEA,wBAAQJ,KAAK,IAAb,SAEGf,EAAS4B,MAAMN,YAAYC,KAAM,SAACC,EAAWC,GAAZ,OAC/B,wBAAQN,MAAOM,EAAf,SAAmBD,SAKvB,wBAAQT,KAAK,IAAb,SAEEf,EAAS4B,MAAMF,MAAMH,KAAM,SAACC,EAAWC,GAAZ,OACzB,wBAAQN,MAAOM,EAAf,SAAmBD,SAKvB,wBAAQT,KAAK,IAAb,SAEEf,EAAS4B,MAAMC,KAAKN,KAAM,SAACC,EAAWC,GAAZ,OACxB,wBAAQN,MAAOM,EAAf,SAAmBD,YCjJ7BM,IAASC,OAAO,cAACnC,EAAD,IAASoC,SAASC,eAAe,W","file":"static/js/main.bdc672bc.chunk.js","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport \"./style.css\";\n\nexport default function App() {\n  var [selectedVariable,setVariable] = useState(\"xxx\");\n  var [jsonData,setJsonData] = useState({});\n  console.log(jsonData);\n  console.log(selectedVariable);\n\n    useEffect(()=>{\n    var url= \"https://jsonplaceholder.typicode.com/todos\";\n    var url = \"https://raw.githubusercontent.com/eshanis/dynamic-form/main/df.json\";\n    //https://jsonplaceholder.typicode.com/todos\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          /*console.log(result);*/\n          setJsonData(result);\n          });\n          \n        },\n\n        (error) => {\n          setError(error);\n        }\n      ,[]);\n\n    if (selectedVariable==\"wind\"){\n        return (\n          <div>\n          <Wind setVariable={setVariable} jsonData={jsonData}/>\n          </div>\n        );\n    }\n\nelse if(selectedVariable==\"solar\"){\n        return (\n          <div>\n          <Solar setVariable={setVariable} jsonData={jsonData}/>\n          </div>\n        );\n    }\n\n    else{\n        return (\n          <div>\n             <DefaultForm setVariable={setVariable}/>\n          </div>\n        );\n    }\n}\n\nexport function DefaultForm({setVariable}) {\n\nfunction handleSolarOption(evt) {\n /*console.log(evt.target.value);*/\n  setVariable(evt.target.value);\n}\n\n  return (\n    <div>\n     <select size=\"3\" onChange={handleSolarOption}>\n     <option selected value=\"solar\">SOLAR</option>\n     <option value=\"wind\">WIND</option>\n     </select>\n    </div>\n  );\n}\n\nexport function Wind({setVariable,jsonData}) {\n\nfunction handleSolarOption(evt) {\n  /*console.log(evt.target.value);*/\n   setVariable(evt.target.value);\n}\n\n  return (\n    <div>\n     <select size=\"3\" onChange={handleSolarOption}>\n     <option value=\"solar\">SOLAR</option>\n     <option selected value=\"wind\">WIND</option>\n     \n     </select>\n     <h1>WIND</h1>\n     \n     <select size=\"5\">\n     {\n        jsonData.wind.contractors.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n      <select size=\"5\">\n     {\n        jsonData.wind.costs.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n      <select size=\"5\">\n     {\n        jsonData.wind.location.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n\n    </div>\n  );\n}\n\nexport function Solar({setVariable,jsonData}) {\n\nfunction handleSolarOption(evt) {\n  /*console.log(evt.target.value);*/\n   setVariable(evt.target.value);\n}\n\n  return (\n    <div>\n     <select size=\"3\" onChange={handleSolarOption}>\n     <option selected value=\"solar\">SOLAR</option>\n     <option value=\"wind\">WIND</option>\n     \n     </select>\n     <h1>SOLAR</h1>\n     \n     <select size=\"6\">\n     {\n        jsonData.solar.contractors.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n      <select size=\"5\">\n     {\n        jsonData.solar.costs.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n      <select size=\"5\">\n     {\n        jsonData.solar.roof.map ( (contractor,i) => (\n          <option value={i}>{contractor}</option>\n         ) \n        ) }\n     </select>\n\n\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}